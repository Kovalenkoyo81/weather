openapi: 3.0.1
info:
  title: Bit School HTTP
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: users
    description: Operations related to users
  - name: weather
    description: Operations related to weather
  - name: favorites
    description: Managing favorites
paths:
  /users/{name}/exists:
    get:
      tags:
        - users
      summary: Check if a user exists
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: Name of the user to find
      responses:
        '200':
          description: User exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
                    description: Indicates if the user exists or not
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
  /users:
    post:
      tags:
        - users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request
        '409':
          description: User already exists
  /login:
    post:
      tags:
        - users
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Access token
        '401':
          description: Invalid credentials
  /weather/current:
    get:
      tags:
        - weather
      summary: Get current weather
      security:
      - BearerAuth: [] 
      parameters:
        - in: query
          name: city
          required: false
          schema:
            type: string
          description: City name to get weather for
        - in: query
          name: lang
          schema:
            type: string
          description: Language code for response localization (e.g., 'en', 'ru', etc.)
      
      responses:
        '200':
          description: Short weather information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplifiedWeatherResponse'
        '404':
          description: City not found
        '401':
          description: User not authorized
  /favorites:
    post:
      tags:
        - favorites
      summary: Create a favorite
      security:
      - BearerAuth: [] 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Favorite'
      responses:
        '200':
          description: Favorite created
        '400':
          description: Bad request
    get:
      tags:
        - favorites
      summary: Get list of favorites
      security:
      - BearerAuth: [] 
      responses:
        '200':
          description: List of favorites
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /favorites/{city}:
    delete:
      tags:
        - favorites
      summary: Delete a favorite
      security:
      - BearerAuth: [] 
      parameters:
        - in: path
          name: city
          required: true
          schema:
            type: string
            example: New York
          description: City name of the favorite to delete
      responses:
        '200':
          description: Favorite deleted
        '404':
          description: Favorite not found
components:
  securitySchemes:
    BearerAuth:  
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: User's name
    LoginRequest:
      type: object
      required:
        - user
      properties:
        user:
          type: string
          example: "userName"
    SimplifiedWeatherResponse:
      type: object
      properties:
        Temperature:
          type: number
          description: Current temperature in Celsius
        Description:
          type: string
          description: Textual description of current weather conditions
        WindSpeed:
          type: number
          description: Wind speed in km/h
    Favorite:
      type: object
      properties:
        city:
          type: string
          description: City name for the favorite
        parameters:
          type: array
          items:
            type: string
          description: List of parameters to track
      example:
        city: "New York"
        parameters:
          - "temp"
          - "humidity"
